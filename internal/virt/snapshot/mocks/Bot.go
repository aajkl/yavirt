// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	model "github.com/projecteru2/yavirt/internal/models"
	mock "github.com/stretchr/testify/mock"
)

// Bot is an autogenerated mock type for the Bot type
type Bot struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *Bot) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Commit provides a mock function with given fields: _a0
func (_m *Bot) Commit(_a0 models.Snapshots) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(models.Snapshots) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Create provides a mock function with given fields: vol
func (_m *Bot) Create(vol *models.Volume) error {
	ret := _m.Called(vol)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Volume) error); ok {
		r0 = rf(vol)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Delete provides a mock function with given fields:
func (_m *Bot) Delete() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteFromBackupStorage provides a mock function with given fields:
func (_m *Bot) DeleteFromBackupStorage() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Download provides a mock function with given fields: _a0
func (_m *Bot) Download(_a0 *models.Snapshot) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Snapshot) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Restore provides a mock function with given fields: vol, chain
func (_m *Bot) Restore(vol *models.Volume, chain models.Snapshots) error {
	ret := _m.Called(vol, chain)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Volume, models.Snapshots) error); ok {
		r0 = rf(vol, chain)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Upload provides a mock function with given fields: force
func (_m *Bot) Upload(force bool) error {
	ret := _m.Called(force)

	var r0 error
	if rf, ok := ret.Get(0).(func(bool) error); ok {
		r0 = rf(force)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
