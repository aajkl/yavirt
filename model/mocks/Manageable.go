// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	model "github.com/projecteru2/yavirt/model"
	mock "github.com/stretchr/testify/mock"

	types "github.com/projecteru2/yavirt/virt/types"
)

// Manageable is an autogenerated mock type for the Manageable type
type Manageable struct {
	mock.Mock
}

// CreateGuest provides a mock function with given fields: opts, host, vols
func (_m *Manageable) CreateGuest(opts types.GuestCreateOption, host *model.Host, vols []*model.Volume) (*model.Guest, error) {
	ret := _m.Called(opts, host, vols)

	var r0 *model.Guest
	if rf, ok := ret.Get(0).(func(types.GuestCreateOption, *model.Host, []*model.Volume) *model.Guest); ok {
		r0 = rf(opts, host, vols)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Guest)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(types.GuestCreateOption, *model.Host, []*model.Volume) error); ok {
		r1 = rf(opts, host, vols)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAllGuests provides a mock function with given fields:
func (_m *Manageable) GetAllGuests() ([]*model.Guest, error) {
	ret := _m.Called()

	var r0 []*model.Guest
	if rf, ok := ret.Get(0).(func() []*model.Guest); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*model.Guest)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetNodeGuests provides a mock function with given fields: nodename
func (_m *Manageable) GetNodeGuests(nodename string) ([]*model.Guest, error) {
	ret := _m.Called(nodename)

	var r0 []*model.Guest
	if rf, ok := ret.Get(0).(func(string) []*model.Guest); ok {
		r0 = rf(nodename)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*model.Guest)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(nodename)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// LoadGuest provides a mock function with given fields: id
func (_m *Manageable) LoadGuest(id string) (*model.Guest, error) {
	ret := _m.Called(id)

	var r0 *model.Guest
	if rf, ok := ret.Get(0).(func(string) *model.Guest); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Guest)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewGuest provides a mock function with given fields: host, img
func (_m *Manageable) NewGuest(host *model.Host, img model.Image) (*model.Guest, error) {
	ret := _m.Called(host, img)

	var r0 *model.Guest
	if rf, ok := ret.Get(0).(func(*model.Host, model.Image) *model.Guest); ok {
		r0 = rf(host, img)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Guest)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*model.Host, model.Image) error); ok {
		r1 = rf(host, img)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
